/****************************************
 * NOMBRE: Adrián Sanz Contreras        *
 * DNI: 49097240-Z                      *
 * Nº EXP: 145                          *
 *                                      *
 * NOMBRE: Alfonso Santamaría Rodríguez *
 * DNI: 49095131-K                      *   
 * Nº EXP: 63                           *
 *                                      *
 * NOMBRE: Fco Javier Pasamontes Moreno *
 * DNI: 47516684-H                      *
 * Nº EXP: 153                          *
 *                                      *
 * 2º GRADO EN INGERNIERÍA DEL SOFTWARE *
 * CURSO: 2011-2012                     *
 ****************************************/

/*
 * ComprarCocheAProveedorIG.java
 *
 * Created on 12-dic-2011, 19:00:39
 */
package practicaGrupal;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class ComprarCocheAProveedorIG extends javax.swing.JDialog {
    
    private ArrayList<Proveedor> misProveedores = new ArrayList<Proveedor>();
    private ArrayList<CocheConcesionario> misCochesConcesionario = 
            new ArrayList<CocheConcesionario>();
    private int rowProveedor = 0;
    private int rowCoche = 0;
    
    /** Creates new form ComprarCocheAProveedorIG */
    public ComprarCocheAProveedorIG(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpMostrarProveedores = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProveedores = new javax.swing.JTable();
        jpMostrarCoches = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtCochesProveedor = new javax.swing.JTable();
        jbComprarCoche = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Comprar coche a un proveedor");

        jpMostrarProveedores.setBorder(javax.swing.BorderFactory.createTitledBorder("Proveedores"));

        jtProveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtProveedoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtProveedores);

        javax.swing.GroupLayout jpMostrarProveedoresLayout = new javax.swing.GroupLayout(jpMostrarProveedores);
        jpMostrarProveedores.setLayout(jpMostrarProveedoresLayout);
        jpMostrarProveedoresLayout.setHorizontalGroup(
            jpMostrarProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMostrarProveedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpMostrarProveedoresLayout.setVerticalGroup(
            jpMostrarProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMostrarProveedoresLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpMostrarCoches.setBorder(javax.swing.BorderFactory.createTitledBorder("Coches del proveedor seleccionado"));

        jtCochesProveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCochesProveedorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtCochesProveedor);

        jbComprarCoche.setText("Comprar coche");
        jbComprarCoche.setEnabled(false);
        jbComprarCoche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbComprarCocheActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpMostrarCochesLayout = new javax.swing.GroupLayout(jpMostrarCoches);
        jpMostrarCoches.setLayout(jpMostrarCochesLayout);
        jpMostrarCochesLayout.setHorizontalGroup(
            jpMostrarCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMostrarCochesLayout.createSequentialGroup()
                .addGroup(jpMostrarCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpMostrarCochesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpMostrarCochesLayout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jbComprarCoche, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpMostrarCochesLayout.setVerticalGroup(
            jpMostrarCochesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMostrarCochesLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbComprarCoche)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpMostrarCoches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpMostrarProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpMostrarProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpMostrarCoches, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtProveedoresMouseClicked
         //Obtenemos la posición en la tabla y en el ArrayList de un proveedor
       this.rowProveedor = this.jtProveedores.rowAtPoint(evt.getPoint());   
       
       //Una vez sabemos sobre qué proveedor hemos hecho click con el ratón,
       //mostramos sus coches.
       
       this.cargarCochesDeProveedores();
    }//GEN-LAST:event_jtProveedoresMouseClicked

    private void jbComprarCocheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbComprarCocheActionPerformed
        if (JOptionPane.showConfirmDialog(this, "¿Desea comprar el coche?",
                    "Modificar datos del coche", JOptionPane.YES_NO_OPTION,
                    JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION){
            //Añadimos el coche a cochesConcesionario
            this.misCochesConcesionario.add(
                    new CocheConcesionario(
                    this.misProveedores.get(this.rowProveedor).
                    getCoches().get(this.rowCoche).getMarca(),
                    this.misProveedores.get(this.rowProveedor).
                    getCoches().get(this.rowCoche).getModelo(), 
                    this.misProveedores.get(this.rowProveedor).
                    getCoches().get(this.rowCoche).getPrecioVenta(), 
                    this.misProveedores.get(this.rowProveedor).
                    getCoches().get(this.rowCoche).getMatricula(),
                    this.misProveedores.get(this.rowProveedor).
                    getCoches().get(this.rowCoche).getTipoVehiculo(),0,""));
            
            //Borramos el coche de la lista de coches del proveedor
            this.misProveedores.get(this.rowProveedor).getCoches().
                    remove(this.rowCoche);
            JOptionPane.showMessageDialog(this,
                        "Coche comprado al proveedor");
            
        }
      
        this.cargarCochesDeProveedores();
        this.jbComprarCoche.setEnabled(false);
    }//GEN-LAST:event_jbComprarCocheActionPerformed

    private void jtCochesProveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCochesProveedorMouseClicked
        this.rowCoche = this.jtCochesProveedor.rowAtPoint(evt.getPoint());       
        this.jbComprarCoche.setEnabled(true);
    }//GEN-LAST:event_jtCochesProveedorMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComprarCocheAProveedorIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComprarCocheAProveedorIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComprarCocheAProveedorIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComprarCocheAProveedorIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                ComprarCocheAProveedorIG dialog = new ComprarCocheAProveedorIG(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbComprarCoche;
    private javax.swing.JPanel jpMostrarCoches;
    private javax.swing.JPanel jpMostrarProveedores;
    private javax.swing.JTable jtCochesProveedor;
    private javax.swing.JTable jtProveedores;
    // End of variables declaration//GEN-END:variables

    public ArrayList<Proveedor> getMisProveedores() {
        return misProveedores;
    }

    public void setMisProveedores(ArrayList<Proveedor> misProveedores) {
        this.misProveedores = misProveedores;
    }

    public ArrayList<CocheConcesionario> getMisCochesConcesionario() {
        return misCochesConcesionario;
    }

    public void setMisCochesConcesionario(ArrayList<CocheConcesionario> misCochesConcesionario) {
        this.misCochesConcesionario = misCochesConcesionario;
    }

    public int getRowCoche() {
        return rowCoche;
    }

    public void setRowCoche(int rowCoche) {
        this.rowCoche = rowCoche;
    }

    public int getRowProveedor() {
        return rowProveedor;
    }

    public void setRowProveedor(int rowProveedor) {
        this.rowProveedor = rowProveedor;
    }

    public void cargarProveedores() {
      
        
        //Cargamos la tabla superior, la de los proveedores
        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("Nombre");
        modelo.addColumn("Dirección");
        modelo.addColumn("Código");
        modelo.addColumn("Tipo de coche");

        //Recorremos los proveedores
        Object[] fila = new Object[4];
        for (int i = 0; i < this.misProveedores.size(); i++) {
            fila[0] = this.misProveedores.get(i).getNombre();
            fila[1] = this.misProveedores.get(i).getDireccion();
            fila[2] = this.misProveedores.get(i).getCodigo();
            fila[3] = this.misProveedores.get(i).getTipoCoche();
       
            modelo.addRow(fila);
        }     

       
        jtProveedores.setModel(modelo);  
        this.jbComprarCoche.setEnabled(false);
    }
    
    private void cargarCochesDeProveedores(){
       DefaultTableModel modeloCoches = new DefaultTableModel();

        modeloCoches.addColumn("Marca");
        modeloCoches.addColumn("Modelo");
        modeloCoches.addColumn("Precio venta");
        modeloCoches.addColumn("Matrícula");
        modeloCoches.addColumn("Tipo de vehículo");

        //Recorremos los coches de un proveedor y añadimos fila
        Object[] filaCoches = new Object[5];
        for (int i = 0; i < this.misProveedores.get(this.rowProveedor).getCoches().size(); i++) {
            filaCoches[0] = this.misProveedores.get(this.rowProveedor).getCoches().get(i).getMarca();
            filaCoches[1] = this.misProveedores.get(this.rowProveedor).getCoches().get(i).getModelo();
            filaCoches[2] = this.misProveedores.get(this.rowProveedor).getCoches().get(i).getPrecioVenta();
            filaCoches[3] = this.misProveedores.get(this.rowProveedor).getCoches().get(i).getMatricula();
            filaCoches[4] = this.misProveedores.get(this.rowProveedor).getCoches().get(i).getTipoVehiculo();
       
            modeloCoches.addRow(filaCoches);
        }      
     
       this.jtCochesProveedor.setModel(modeloCoches);
           this.jbComprarCoche.setEnabled(false);
    }
}
