/****************************************
 * NOMBRE: Adrián Sanz Contreras        *
 * DNI: 49097240-Z                      *
 * Nº EXP: 145                          *
 *                                      *
 * NOMBRE: Alfonso Santamaría Rodríguez *
 * DNI: 49095131-K                      *   
 * Nº EXP: 63                           *
 *                                      *
 * NOMBRE: Fco Javier Pasamontes Moreno *
 * DNI: 47516684-H                      *
 * Nº EXP: 153                          *
 *                                      *
 * 2º GRADO EN INGERNIERÍA DEL SOFTWARE *
 * CURSO: 2011-2012                     *
 ****************************************/

/*
 * ConsultaClienteComproCocheIG.java
 *
 * Created on 13-dic-2011, 20:28:32
 */
package practicaGrupal;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;


public class ConsultaClienteComproCocheIG extends javax.swing.JDialog {

    private ArrayList<CocheConcesionario> misCoches = new ArrayList<CocheConcesionario>();
    private ArrayList<Cliente> misClientes = new ArrayList<Cliente>();
    private int[] posRealCoche;
    private int coche;
    private int pos;
    private int i;
    private boolean correcto;
   

    /** Creates new form ConsultaClienteComproCocheIG */
    public ConsultaClienteComproCocheIG(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpMostrarCochesVendidos = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtCochesVendidos = new javax.swing.JTable();
        jpMostrarCliente = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtCliente = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Clientes que tienen un coche comprado");

        jpMostrarCochesVendidos.setBorder(javax.swing.BorderFactory.createTitledBorder("Coches comprados"));

        jtCochesVendidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCochesVendidosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtCochesVendidos);

        javax.swing.GroupLayout jpMostrarCochesVendidosLayout = new javax.swing.GroupLayout(jpMostrarCochesVendidos);
        jpMostrarCochesVendidos.setLayout(jpMostrarCochesVendidosLayout);
        jpMostrarCochesVendidosLayout.setHorizontalGroup(
            jpMostrarCochesVendidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMostrarCochesVendidosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpMostrarCochesVendidosLayout.setVerticalGroup(
            jpMostrarCochesVendidosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMostrarCochesVendidosLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpMostrarCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        jScrollPane4.setViewportView(jtCliente);

        javax.swing.GroupLayout jpMostrarClienteLayout = new javax.swing.GroupLayout(jpMostrarCliente);
        jpMostrarCliente.setLayout(jpMostrarClienteLayout);
        jpMostrarClienteLayout.setHorizontalGroup(
            jpMostrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMostrarClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpMostrarClienteLayout.setVerticalGroup(
            jpMostrarClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMostrarClienteLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpMostrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpMostrarCochesVendidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jpMostrarCochesVendidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpMostrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtCochesVendidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCochesVendidosMouseClicked
        //Obtenemos la posicion del coche seleccionado
        this.coche = this.jtCochesVendidos.rowAtPoint(evt.getPoint());
        
       
        
        
        this.posRealCoche = this.posicionRealCoche(misCoches);
        this.correcto = false;
        this.pos = 0;
        this.i = 0;
        while ((!correcto) && (pos < misClientes.size())) {
            while ((!correcto) && (i < misClientes.get(pos).getCochesComprados().size())) {
                if ((this.misCoches.get(this.posRealCoche[coche]).getMarca().equalsIgnoreCase(this.misClientes.get(pos).getCochesComprados().get(i).getMarca()))
                        && (this.misCoches.get(this.posRealCoche[coche]).getModelo().equalsIgnoreCase(this.misClientes.get(pos).getCochesComprados().get(i).getModelo()))
                        && (this.misCoches.get(this.posRealCoche[coche]).getMatricula().equalsIgnoreCase(this.misClientes.get(pos).getCochesComprados().get(i).getMatricula()))
                        && (this.misCoches.get(this.posRealCoche[coche]).getTipoVehiculo().equalsIgnoreCase(this.misClientes.get(pos).getCochesComprados().get(i).getTipoVehiculo()))
                        && (this.misCoches.get(this.posRealCoche[coche]).getPrecioVenta() == this.misClientes.get(pos).getCochesComprados().get(i).getPrecioVenta())
                        && (this.misCoches.get(this.posRealCoche[coche]).getPrecioCompra() == this.misClientes.get(pos).getCochesComprados().get(i).getPrecioCompra())
                        && (this.misCoches.get(this.posRealCoche[coche]).getEstado().equalsIgnoreCase(this.misClientes.get(pos).getCochesComprados().get(i).getEstado()))) {
                    correcto = true;
                } else {
                    i++;
                }
            }
            i = 0;
            if (!correcto){
                pos++;
            }
        }

        this.cargarCliente(this.pos);

    }//GEN-LAST:event_jtCochesVendidosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaClienteComproCocheIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaClienteComproCocheIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaClienteComproCocheIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaClienteComproCocheIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ConsultaClienteComproCocheIG dialog = new ConsultaClienteComproCocheIG(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel jpMostrarCliente;
    private javax.swing.JPanel jpMostrarCochesVendidos;
    private javax.swing.JTable jtCliente;
    private javax.swing.JTable jtCochesVendidos;
    // End of variables declaration//GEN-END:variables

    public void cargarCoches() {
        //Cargamos la tabla superior 
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Marca");
        modelo.addColumn("Modelo");
        modelo.addColumn("Matricula");
        modelo.addColumn("Tipo Vehiculo");
        modelo.addColumn("Precio");

        //Recorremos los coches del concesionario
        Object[] fila = new Object[5];
        for (int i = 0; i < this.misCoches.size(); i++) {
            if (this.misCoches.get(i).getEstado().equalsIgnoreCase("Vendido")) {
                fila[0] = this.misCoches.get(i).getMarca();
                fila[1] = this.misCoches.get(i).getModelo();
                fila[2] = this.misCoches.get(i).getMatricula();
                fila[3] = this.misCoches.get(i).getTipoVehiculo();
                fila[4] = this.misCoches.get(i).getPrecioCompra();
                modelo.addRow(fila);
                
            }
        }
        
        

        jtCochesVendidos.setModel(modelo);
    }

    public void cargarCliente(int pos) {
        //Cargamos la tabla superior, la de los proveedores
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre");
        modelo.addColumn("Dni");


        //Recorremos los proveedores
        Object[] fila = new Object[2];
        fila[0] = this.misClientes.get(pos).getNombre();
        fila[1] = this.misClientes.get(pos).getDni();
        modelo.addRow(fila);


        jtCliente.setModel(modelo);
    }

    public int[] posicionRealCoche(ArrayList<CocheConcesionario> listaCoche) {
        int[] posRealCoche = new int[listaCoche.size()];
        int j = 0;
        for (int i = 0; i < listaCoche.size(); i++) {
            if (listaCoche.get(i).getEstado().equalsIgnoreCase("Vendido")) {
                posRealCoche[j] = i;
                j++;
            }
        }
        return posRealCoche;
    }

    public ArrayList<Cliente> getMisClientes() {
        return misClientes;
    }

    public void setMisClientes(ArrayList<Cliente> misClientes) {
        this.misClientes = misClientes;
    }

    public ArrayList<CocheConcesionario> getMisCoches() {
        return misCoches;
    }

    public void setMisCoches(ArrayList<CocheConcesionario> misCoches) {
        this.misCoches = misCoches;
    }
}
