/****************************************
 * NOMBRE: Adrián Sanz Contreras        *
 * DNI: 49097240-Z                      *
 * Nº EXP: 145                          *
 *                                      *
 * NOMBRE: Alfonso Santamaría Rodríguez *
 * DNI: 49095131-K                      *   
 * Nº EXP: 63                           *
 *                                      *
 * NOMBRE: Fco Javier Pasamontes Moreno *
 * DNI: 47516684-H                      *
 * Nº EXP: 153                          *
 *                                      *
 * 2º GRADO EN INGERNIERÍA DEL SOFTWARE *
 * CURSO: 2011-2012                     *
 ****************************************/

/*
 * CancelarReservaIG.java
 *
 * Created on 13-dic-2011, 17:46:41
 */
package practicaGrupal;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class CancelarReservaIG extends javax.swing.JDialog {

    private int pos;
    private ArrayList<Cliente> miCliente;
    private ArrayList<CocheConcesionario> misCoches;

    /** Creates new form CancelarReservaIG */
    public CancelarReservaIG(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public void iniciarCoche() {
        jtCoches.setModel(new DefaultTableModel());
    }

    public void cargarClientes(ArrayList<Cliente> listaCliente) {
        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("Nombre");
        modelo.addColumn("Dni");

        //Recorremos los proveedores
        Object[] fila = new Object[2];
        for (int i = 0; i < listaCliente.size(); i++) {
            fila[0] = listaCliente.get(i).getNombre();
            fila[1] = listaCliente.get(i).getDni();

            modelo.addRow(fila);
        }

        jtClientes.setModel(modelo);
        this.miCliente = listaCliente;
    }

    public void cargarCoches(ArrayList<CocheConcesionario> listaCoche) {
        //Cargamos la tabla superior, la de los proveedores
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Marca");
        modelo.addColumn("Modelo");
        modelo.addColumn("Matricula");
        modelo.addColumn("Tipo Vehiculo");
        modelo.addColumn("Precio");

        //Recorremos los proveedores
        Object[] fila = new Object[5];
        for (int i = 0; i < listaCoche.size(); i++) {
            {
                fila[0] = listaCoche.get(i).getMarca();
                fila[1] = listaCoche.get(i).getModelo();
                fila[2] = listaCoche.get(i).getMatricula();
                fila[3] = listaCoche.get(i).getTipoVehiculo();
                fila[4] = listaCoche.get(i).getPrecioCompra();
                modelo.addRow(fila);
            }
        }

        jtCoches.setModel(modelo);

    }

    public ArrayList<Cliente> getMiCliente() {
        return miCliente;
    }

    public void setMiCliente(ArrayList<Cliente> miCliente) {
        this.miCliente = miCliente;
    }

    public ArrayList<CocheConcesionario> getMisCoches() {
        return misCoches;
    }

    public void setMisCoches(ArrayList<CocheConcesionario> misCoches) {
        this.misCoches = misCoches;
    }

    public int buscar(ArrayList<CocheConcesionario> listaCoches, CocheConcesionario miCoche) {
        int coche = 0;
        boolean correcto = false;
        while ((!correcto) && (coche < misCoches.size())) {
            if ((this.misCoches.get(coche).getMarca().equalsIgnoreCase(miCoche.getMarca()))
                    && (this.misCoches.get(coche).getModelo().equalsIgnoreCase(miCoche.getModelo()))
                    && (this.misCoches.get(coche).getMatricula().equalsIgnoreCase(miCoche.getMatricula()))
                    && (this.misCoches.get(coche).getTipoVehiculo().equalsIgnoreCase(miCoche.getTipoVehiculo()))
                    && (this.misCoches.get(coche).getPrecioVenta() == miCoche.getPrecioVenta())
                    && (this.misCoches.get(coche).getPrecioCompra() == miCoche.getPrecioCompra())
                    && (this.misCoches.get(coche).getEstado().equalsIgnoreCase(miCoche.getEstado()))) {
                correcto = true;
            } else {
                coche++;
            }
        }
        if (correcto == true) {
            return coche;
        } else {
            return -1;
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtCoches = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtClientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cancelar una reserva");

        jButton1.setText("Cancelar Reserva");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jtCoches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtCoches);

        jtClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(140, 140, 140))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    int i = 0;
    while ((!jtClientes.isRowSelected(i)) && (i < jtClientes.getRowCount())) {
        i++;
    }
    int iC = i;
    i = 0;
    while ((!jtCoches.isRowSelected(i)) && (i < jtCoches.getRowCount())) {
        i++;
    }
    if (jtClientes.isRowSelected(iC)) {
        if (jtCoches.isRowSelected(i)) {
            int posicion = this.buscar(misCoches, miCliente.get(iC).getCochesReservados().get(i));
            if (posicion != -1) {
                this.misCoches.get(posicion).ponerVenta();
                miCliente.get(iC).getCochesReservados().remove(i);
                this.cargarCoches(miCliente.get(iC).getCochesReservados());
            } else {
                JOptionPane.showConfirmDialog(this, "No se ha encontrado el coche", "Error",
                        JOptionPane.PLAIN_MESSAGE, JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showConfirmDialog(this, "No ha seleccionado un coche", "Error",
                    JOptionPane.PLAIN_MESSAGE, JOptionPane.ERROR_MESSAGE);

        }
    } else {
        JOptionPane.showConfirmDialog(this, "No ha seleccionado un cliente", "Error",
                JOptionPane.PLAIN_MESSAGE, JOptionPane.ERROR_MESSAGE);
    }

}//GEN-LAST:event_jButton1ActionPerformed

private void jtClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtClientesMouseClicked
// TODO add your handling code here:
    this.pos = this.jtClientes.rowAtPoint(evt.getPoint());
    this.cargarCoches(miCliente.get(pos).getCochesReservados());

}//GEN-LAST:event_jtClientesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CancelarReservaIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CancelarReservaIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CancelarReservaIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CancelarReservaIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                CancelarReservaIG dialog = new CancelarReservaIG(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtClientes;
    private javax.swing.JTable jtCoches;
    // End of variables declaration//GEN-END:variables
}
