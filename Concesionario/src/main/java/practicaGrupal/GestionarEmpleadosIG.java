/****************************************
 * NOMBRE: Adrián Sanz Contreras        *
 * DNI: 49097240-Z                      *
 * Nº EXP: 145                          *
 *                                      *
 * NOMBRE: Alfonso Santamaría Rodríguez *
 * DNI: 49095131-K                      *   
 * Nº EXP: 63                           *
 *                                      *
 * NOMBRE: Fco Javier Pasamontes Moreno *
 * DNI: 47516684-H                      *
 * Nº EXP: 153                          *
 *                                      *
 * 2º GRADO EN INGERNIERÍA DEL SOFTWARE *
 * CURSO: 2011-2012                     *
 ****************************************/
/*
 * GestionarEmpleadosIG.java
 *
 * Created on 09-dic-2011, 22:46:51
 */
package practicaGrupal;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class GestionarEmpleadosIG extends javax.swing.JDialog {

    private ArrayList<Empleado> listaEmpleado;
    private ArrayList<Comisionario> listaComisionario;
    
    /** Creates new form GestionarEmpleadosIG */
    public GestionarEmpleadosIG(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtEmpleados = new javax.swing.JTable();
        jbDarDeAlta = new javax.swing.JButton();
        jbDarDeBaja = new javax.swing.JButton();
        jbModificarDatos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de empleados");
        setIconImage(null);

        jtEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtEmpleados);

        jbDarDeAlta.setText("Dar de alta");
        jbDarDeAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDarDeAltaActionPerformed(evt);
            }
        });

        jbDarDeBaja.setText("Dar de baja");
        jbDarDeBaja.setEnabled(false);
        jbDarDeBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDarDeBajaActionPerformed(evt);
            }
        });

        jbModificarDatos.setText("Modificar datos");
        jbModificarDatos.setEnabled(false);
        jbModificarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarDatosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addComponent(jbDarDeAlta)
                .addGap(37, 37, 37)
                .addComponent(jbDarDeBaja)
                .addGap(38, 38, 38)
                .addComponent(jbModificarDatos)
                .addGap(108, 108, 108))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbDarDeAlta)
                    .addComponent(jbDarDeBaja)
                    .addComponent(jbModificarDatos))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbDarDeAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDarDeAltaActionPerformed
        AltaEmpleadoIG altaEmple = new AltaEmpleadoIG(null,true);
        
        altaEmple.setListaCom(listaComisionario);
        altaEmple.setListaEm(listaEmpleado);
        altaEmple.setLocationRelativeTo(null);
        altaEmple.setVisible(true);
   
        this.listaEmpleado = altaEmple.getListaEm();
        this.listaComisionario = altaEmple.getListaCom();
        this.cargarEmpleados(this.listaEmpleado, this.listaComisionario); 
        
    }//GEN-LAST:event_jbDarDeAltaActionPerformed

    private void jbDarDeBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDarDeBajaActionPerformed
        int i = 0;
        
        while ((!jtEmpleados.isRowSelected(i)) && (i < jtEmpleados.getRowCount())) {
            i++;
        }
        if (jtEmpleados.isRowSelected(i)) {
            if (jtEmpleados.getValueAt(i, 5).toString().equalsIgnoreCase("Comisionario")) {
                this.listaComisionario.remove(i - this.listaEmpleado.size());
            } else {
                this.listaEmpleado.remove(i);

            }
            this.cargarEmpleados(this.listaEmpleado, this.listaComisionario);
        }
    }//GEN-LAST:event_jbDarDeBajaActionPerformed

    private void jbModificarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarDatosActionPerformed
        int i = 0;
        
        //i representa el numero de la posición del empleado a modificar
        while ((!jtEmpleados.isRowSelected(i)) && (i < jtEmpleados.getRowCount())) {
            i++;
        }
        
        //Con esta condición controlamos si se ha seleccionado alguna columna o no
        if (i < (this.listaEmpleado.size() + this.listaComisionario.size())){
            //Creamos el nuevo JDialog 
            ModificarEmpleadoIG modifEmple = new ModificarEmpleadoIG(null, true);

            //Al nuevo JDialog le enviamos los datos pertinentes
            modifEmple.setListaCom(listaComisionario);
            modifEmple.setListaEmp(listaEmpleado);
            modifEmple.setTipo(jtEmpleados.getValueAt(i, 5).toString());

            if (jtEmpleados.getValueAt(i, 5).
                    toString().equalsIgnoreCase("Comisionario")) {
                modifEmple.setPos(i - this.listaEmpleado.size());
            } else {
                modifEmple.setPos(i);
            }

            //Cargamos los datos en los jTextField correspondientes de
            //ModificarEmpleadoIG
            modifEmple.cargarDatosEnPaneles();
            modifEmple.setLocationRelativeTo(null);
            modifEmple.setVisible(true);

            this.listaComisionario = modifEmple.getListaCom();
            this.listaEmpleado = modifEmple.getListaEmp();
            this.cargarEmpleados(this.listaEmpleado, this.listaComisionario);
        }
        
    }//GEN-LAST:event_jbModificarDatosActionPerformed

    private void jtEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtEmpleadosMouseClicked
        // TODO add your handling code here:
        if (this.jtEmpleados.rowAtPoint(evt.getPoint()) >= 0 && this.jtEmpleados.isEnabled()){
            this.jbModificarDatos.setEnabled(true);
            this.jbDarDeBaja.setEnabled(true);
        }
    }//GEN-LAST:event_jtEmpleadosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionarEmpleadosIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionarEmpleadosIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionarEmpleadosIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionarEmpleadosIG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                GestionarEmpleadosIG dialog = new GestionarEmpleadosIG(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbDarDeAlta;
    private javax.swing.JButton jbDarDeBaja;
    private javax.swing.JButton jbModificarDatos;
    private javax.swing.JTable jtEmpleados;
    // End of variables declaration//GEN-END:variables

    public void cargarEmpleados(ArrayList<Empleado> listaEmple, ArrayList<Comisionario> listaCom) {
        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("Nombre");
        modelo.addColumn("DNI");
        modelo.addColumn("Dirección");
        modelo.addColumn("Teléfono");
        modelo.addColumn("Salario");
        modelo.addColumn("Tipo");

        //Recorremos los empleados
        Object[] fila = new Object[6];
        for (int i = 0; i < listaEmple.size(); i++) {
            fila[0] = listaEmple.get(i).getNombre();
            fila[1] = listaEmple.get(i).getDni();
            fila[2] = listaEmple.get(i).getDireccion();
            fila[3] = listaEmple.get(i).getTelefono();
            fila[4] = listaEmple.get(i).getSalario();
            fila[5] = listaEmple.get(i).getTipoEmpleado();

            modelo.addRow(fila);
        }
        //Recorremos los comisionarios
        for (int i = 0; i < listaCom.size(); i++) {
            fila[0] = listaCom.get(i).getNombre();
            fila[1] = listaCom.get(i).getDni();
            fila[2] = listaCom.get(i).getDireccion();
            fila[3] = listaCom.get(i).getTelefono();
            fila[4] = "No tiene";
            fila[5] = "Comisionario";

            modelo.addRow(fila);

        }


        this.jbModificarDatos.setEnabled(false);
        this.jbDarDeBaja.setEnabled(false);
        jtEmpleados.setModel(modelo);
        this.listaEmpleado = listaEmple;
        this.listaComisionario = listaCom;
    }

    public ArrayList<Empleado> getListaEmpleado() {
        return this.listaEmpleado;
    }

    public ArrayList<Comisionario> getListaComisionario() {
        return listaComisionario;
    }

    public void setListaComisionario(ArrayList<Comisionario> listaComisionario) {
        this.listaComisionario = listaComisionario;
    }
}
